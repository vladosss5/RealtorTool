// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealtorTool.Data;

#nullable disable

namespace RealtorTool.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250613113427_AddPasswordHashing")]
    partial class AddPasswordHashing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealtorTool.Core.DbModels.Address", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("CityId")
                        .HasColumnType("text");

                    b.Property<string>("DistrictId")
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("text");

                    b.Property<string>("RegionId")
                        .HasColumnType("text");

                    b.Property<string>("StreetId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("RegionId");

                    b.HasIndex("StreetId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Application", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Desctiption")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("DesiredCost")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RealtorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeDealId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RealtorId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeDealId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Dictionary", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dictionaries");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.DictionaryValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DictionaryId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.ToTable("DictionaryValues");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.AuthorizationData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationData");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.ClientTags", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TagId");

                    b.ToTable("ClientTags");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("EMail")
                        .HasColumnType("text");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.RealtorDetails", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AboutMe")
                        .HasColumnType("text");

                    b.Property<string>("Education")
                        .HasColumnType("text");

                    b.Property<string>("Qualification")
                        .HasColumnType("text");

                    b.Property<string>("Services")
                        .HasColumnType("text");

                    b.Property<string>("WorkExperience")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RealtorDetails");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.Area", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("HasHouse")
                        .HasColumnType("boolean");

                    b.Property<decimal>("TotalSqare")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.Flat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("BathroomTypeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("CeilingHeight")
                        .HasColumnType("numeric");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<string>("HouseId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RepairId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsedTypeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BathroomTypeId");

                    b.HasIndex("HouseId");

                    b.HasIndex("RepairId");

                    b.HasIndex("UsedTypeId");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.House", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("TotalNumberFloors")
                        .HasColumnType("integer");

                    b.Property<int>("YearConstruction")
                        .HasColumnType("integer");

                    b.Property<string>("СonstructionTypeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("СonstructionTypeId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.PrivateHome", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AddressNumber")
                        .HasColumnType("text");

                    b.Property<string>("AreaId")
                        .HasColumnType("text");

                    b.Property<decimal>("CeilingHeight")
                        .HasColumnType("numeric");

                    b.Property<int>("FloorsCount")
                        .HasColumnType("integer");

                    b.Property<int>("RoomCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("Sqare")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("PrivateHomes");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.Realty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("TypeId");

                    b.ToTable("Realties");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Address", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "Street")
                        .WithMany()
                        .HasForeignKey("StreetId");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Region");

                    b.Navigation("Street");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Application", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.PersonModels.Person", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.PersonModels.Person", "Realtor")
                        .WithMany()
                        .HasForeignKey("RealtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "TypeDeal")
                        .WithMany()
                        .HasForeignKey("TypeDealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Realtor");

                    b.Navigation("Status");

                    b.Navigation("TypeDeal");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.DictionaryValue", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.Dictionary", "Dictionary")
                        .WithMany("DictionaryValues")
                        .HasForeignKey("DictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dictionary");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.AuthorizationData", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.PersonModels.Person", "Person")
                        .WithOne("AuthorizationData")
                        .HasForeignKey("RealtorTool.Core.DbModels.PersonModels.AuthorizationData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.ClientTags", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.PersonModels.Person", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.Person", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.RealtorDetails", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.PersonModels.Person", null)
                        .WithOne("RealtorDetails")
                        .HasForeignKey("RealtorTool.Core.DbModels.PersonModels.RealtorDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Photo", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.Realty.Realty", null)
                        .WithMany("Photos")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.Area", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.Address", "Address")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.Flat", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "BathroomType")
                        .WithMany()
                        .HasForeignKey("BathroomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.Realty.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "Repair")
                        .WithMany()
                        .HasForeignKey("RepairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "UsedType")
                        .WithMany()
                        .HasForeignKey("UsedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BathroomType");

                    b.Navigation("House");

                    b.Navigation("Repair");

                    b.Navigation("UsedType");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.House", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "СonstructionType")
                        .WithMany()
                        .HasForeignKey("СonstructionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("СonstructionType");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.PrivateHome", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.Realty.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Area");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.Realty", b =>
                {
                    b.HasOne("RealtorTool.Core.DbModels.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.DbModels.DictionaryValue", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Dictionary", b =>
                {
                    b.Navigation("DictionaryValues");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.PersonModels.Person", b =>
                {
                    b.Navigation("AuthorizationData");

                    b.Navigation("RealtorDetails");
                });

            modelBuilder.Entity("RealtorTool.Core.DbModels.Realty.Realty", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
