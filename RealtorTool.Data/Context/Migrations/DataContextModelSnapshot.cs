// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealtorTool.Data.Context;

#nullable disable

namespace RealtorTool.Context.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Attribute", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Client", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Lname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Sname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Dictionary", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Dictionaries");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.DictionaryValue", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Dictionaryid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Dictionaryid");

                    b.ToTable("DictionaryValues");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("EMail")
                        .HasColumnType("text");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Lname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Realty", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Attributes")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasDefaultValue("RUB");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Realties");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.RealtyAttribute", b =>
                {
                    b.Property<string>("IdRealty")
                        .HasColumnType("text");

                    b.Property<string>("IdAttribute")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("IdRealty", "IdAttribute");

                    b.HasIndex("IdAttribute");

                    b.ToTable("RealtyAttributes");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.RealtyRequest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("RealtyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RealtyId");

                    b.HasIndex("RequestId");

                    b.ToTable("RealtyRequests");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Request", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DictionaryValueId")
                        .HasColumnType("text");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("RequestData")
                        .HasColumnType("jsonb");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DictionaryValueId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.DictionaryValue", b =>
                {
                    b.HasOne("RealtorTool.Core.Models.DbEntities.Dictionary", "Dictionary")
                        .WithMany("DictionaryValues")
                        .HasForeignKey("Dictionaryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dictionary");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Realty", b =>
                {
                    b.HasOne("RealtorTool.Core.Models.DbEntities.DictionaryValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.Models.DbEntities.DictionaryValue", "Type")
                        .WithMany("Realties")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.RealtyAttribute", b =>
                {
                    b.HasOne("RealtorTool.Core.Models.DbEntities.Attribute", "Attribute")
                        .WithMany("RealtyAttributes")
                        .HasForeignKey("IdAttribute")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.Models.DbEntities.Realty", "Realty")
                        .WithMany("RealtyAttributes")
                        .HasForeignKey("IdRealty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Realty");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.RealtyRequest", b =>
                {
                    b.HasOne("RealtorTool.Core.Models.DbEntities.Realty", "Realty")
                        .WithMany("RequestsLink")
                        .HasForeignKey("RealtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.Models.DbEntities.Request", "Request")
                        .WithMany("RealtyLink")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Realty");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Request", b =>
                {
                    b.HasOne("RealtorTool.Core.Models.DbEntities.Client", "Client")
                        .WithMany("Requests")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("RealtorTool.Core.Models.DbEntities.DictionaryValue", null)
                        .WithMany("Requests")
                        .HasForeignKey("DictionaryValueId");

                    b.HasOne("RealtorTool.Core.Models.DbEntities.Employee", "Employee")
                        .WithMany("Requests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.Models.DbEntities.DictionaryValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealtorTool.Core.Models.DbEntities.DictionaryValue", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Attribute", b =>
                {
                    b.Navigation("RealtyAttributes");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Client", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Dictionary", b =>
                {
                    b.Navigation("DictionaryValues");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.DictionaryValue", b =>
                {
                    b.Navigation("Realties");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Employee", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Realty", b =>
                {
                    b.Navigation("RealtyAttributes");

                    b.Navigation("RequestsLink");
                });

            modelBuilder.Entity("RealtorTool.Core.Models.DbEntities.Request", b =>
                {
                    b.Navigation("RealtyLink");
                });
#pragma warning restore 612, 618
        }
    }
}
